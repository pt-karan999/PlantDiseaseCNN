{"version":3,"sources":["cblogo.PNG","bg.jpg","home.js","App.js","reportWebVitals.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","axios","require","default","useStyles","makeStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","concat","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","classes","selectedFile","setSelectedFile","useState","preview","setPreview","data","setData","setImage","isLoading","setIsloading","confidence","useEffect","undefined","objectUrl","URL","createObjectURL","async","formData","FormData","append","res","method","url","process","status","sendFile","parseFloat","toFixed","_jsxs","React","Fragment","children","_jsx","AppBar","position","className","Toolbar","Typography","title","variant","noWrap","Avatar","src","cblogo","Container","disableGutters","Grid","container","direction","item","xs","Card","CardActionArea","CardMedia","component","CardContent","content","DropzoneArea","acceptedFiles","dropzoneText","onChange","files","length","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","align","TableBody","scope","class","CircularProgress","onClick","clearData","startIcon","Clear","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf63b55.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cblogo.8a1a573d.PNG\";","export default __webpack_public_path__ + \"static/media/bg.475a937f.jpg\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./cblogo.PNG\";\r\nimport image from \"./bg.jpg\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\n\r\n\r\n\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 500,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '22px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (files) => {\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\" className={classes.appbar}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Potato Disease Detection using Deep Learning\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n          <Avatar src={cblogo}></Avatar>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a potato plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:</TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell1}>Confidence:</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell component=\"th\" scope=\"row\" className={classes.tableCell}>\r\n                          {data.class}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\" className={classes.tableCell}>{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container >\r\n    </React.Fragment >\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}